import Foundation

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
func hasUniqueCharacters(_ text: String) -> Bool {
	// —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
	var seenCharacters = Set<Character>()
	
	// –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
	for char in text {
		if seenCharacters.contains(char) {
			// –µ—Å–ª–∏ —Å–∏–º–≤–æ–ª —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è ‚Üí –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ
			return false
		}
		// –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª –≤ Set
		seenCharacters.insert(char)
	}
	
	// –µ—Å–ª–∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ ‚Üí –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã
	return true
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
func runProblem10() {
	while true {
		print("\nEnter a string to check for unique characters (or type 'exit' to quit):")
		
		if let input = readLine() {
			if input.lowercased() == "exit" {
				print("Bye üëã")
				break
			}
			
			if hasUniqueCharacters(input) {
				print("All characters are unique ‚úÖ")
			} else {
				print("String has duplicate characters ‚ùå")
			}
		} else {
			print("Invalid input")
		}
		print("-----------------------------------")
	}
}
